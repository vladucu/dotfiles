require("hs.ipc")

-- Install hs command line tool
{{- if eq .chezmoi.arch "arm64" }}
-- Hammerspoon will fail on newer M1's because it defaults to installing to /usr/local/bin, so we overwrite the path
hs.ipc.cliInstall("/opt/homebrew")
{{ else }}
hs.ipc.cliInstall()
{{- end }}

stackline = require "stackline"

{{- $yabai := or (lookPath "/opt/homebrew/bin/yabai") (lookPath "/usr/local/bin/yabai") }}
local myStackline = {
  paths = {
    yabai = "{{ $yabai }}"
  },
  -- Appearance
  appearance = {
    alpha                    = 1,                   -- Opacity of active indicators
    color                    = { white = 0.90 },    -- Indicator background color, e.g., {red = 0.5, blue = 0 }
    dimmer                   = 2.5,                 -- Higher numbers increase contrast b/n focused & unfocused state
    fadeDuration             = 0.2,                 -- Duration of fade animations (seconds) 
    iconDimmer               = 1.1,                 -- Higher numbers dim inactive icons *less* than the non-icon indicators
    iconPadding              = 4,                   -- Space between icon & indicator edge. Higher numbers → smaller, more inset icons
    pillThinness             = 6,                   -- Aspect ratio of pill-style icons (width = size / pillThinness)
    radius                   = 3,                   -- Indicator roundness. Higher numbers → *less* roundness… I'm sorry
    shouldFade               = true,                -- Enable/disable fade animations
    showIcons                = true,                -- Window indicator style ('lozenge'-shaped when false)
    size                     = 32,                  -- Size of window indicators (height when icons off)
    vertSpacing              = 1.2,                 -- Amount of vertical space between indicators
    offset                   = {                    -- Offset controls position of stack indicators relative to the window
      y                 = 50,                       -- Distance from top of the window to render indicators
      x                 = 4                         -- Distance away from the edge of the window to render indicators
    }
  }
}

stackline:init(myStackline)

hs.window.animationDuration = 0 -- disable animations

function launchOrFocus(app)
  return function()
    hs.application.launchOrFocusByBundleID(app)
  end
end

local bindings = {
  -- Find bundle ID using
  -- osascript -e 'id of app "Google Chrome"'
  [{'alt', 'cmd', 'ctrl', 'shift'}] = {
    a = launchOrFocus('company.thebrowser.Browser'),
    b = launchOrFocus('com.brave.Browser'),
    c = launchOrFocus('com.google.Chrome'),
    d = launchOrFocus('com.hnc.Discord'),
    f = launchOrFocus('fom.apple.finder'),
    g = launchOrFocus('ru.keepcoder.Telegram'),
    m = launchOrFocus('com.spotify.client'),
    s = launchOrFocus('com.tinyspeck.slackmacgap'),
    t = launchOrFocus('com.mitchellh.ghostty'),
    v = launchOrFocus('com.microsoft.VSCode'),
    w = launchOrFocus('net.whatsapp.Whatsapp'),
    y = launchOrFocus('com.apple.systempreferences'),
    z = launchOrFocus('us.zoom.xos'),
  },
}

for modifier, keyActions in pairs(bindings) do
  for key, action in pairs(keyActions) do
    hs.hotkey.bind(modifier, tostring(key), action)
  end
end

--
-- Auto-reload config on change.
--

function reloadConfig(files)
  for _, file in pairs(files) do
    if file:sub(-4) == '.lua' then
      hs.reload()
    end
  end

  hs.notify.new({title="Hammerspoon", informativeText="Config reloaded"}):send()
end

hs.pathwatcher.new(os.getenv('HOME') .. '/.hammerspoon/', reloadConfig):start()


{{/* vim: set filetype=lua: */}}
